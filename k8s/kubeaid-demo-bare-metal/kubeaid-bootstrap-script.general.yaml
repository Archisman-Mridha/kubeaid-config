forkURLs:
  # KubeAid repository URL (in HTTPs syntax).
  # Defaults to Obmondo's KubeAid repository.
  kubeaid: https://github.com/Obmondo/KubeAid

  # Your KubeAid config fork URL (in HTTPs syntax).
  kubeaidConfig: https://github.com/Archisman-Mridha/kubeaid-config

# Kubernetes cluster and control-plane specific configurations.
cluster:
  # Kubernetes cluster name.
  name: kubeaid-demo-bare-metal

  # Kubernetes version to use.
  #
  # We're using Kubermatic KubeOne v1.10 under the hood, to initialize the Kubernete cluster.
  # And the supported Kubernetes versions are specified here :
  # https://docs.kubermatic.com/kubeone/v1.10/architecture/compatibility/supported-versions/.
  k8sVersion: v1.32.0

  # Kubeaid version to use.
  #
  # By default, the latest KubeAid version is used.
  # You an view all the KubeAid versions here : https://github.com/Obmondo/kubeaid/releases.
  kubeaidVersion: 17.1.0

cloud:
  bare-metal:
    # This SSH config will be used by default, for all the bare-metal hosts.
    #
    # FYI, regarding KubeOne :
    #
    #   (1) KubeOne works only when SSHed as the root user, so we have removed the ssh.user
    #       configuration option.
    #
    #   (2) KubeOne doesn't read your local SSH configuration (present in ~/.ssh/config).
    #
    # If you don't provide details about an SSH private key, then the SSH auth socket will be used
    # to authenticate to your Linux based bare-metal servers.
    # So, whenever Kubermatic KubeOne tries to authenticate to your bare-metal Linux servers,
    # KubeAid Bootstrap Script will prompt you to touch the YubiKey.
    ssh: {}
    #   port: 22
    #   privateKey:
    #     privateKeyFilePath: ./outputs/ssh/rsa/openssh/.key

    controlPlane:
      endpoint:
        host: "65.109.11.32"
        port: 6443
      hosts:
        - publicAddress: "65.109.11.32"
          #
          # Or you can specify a private IP address.
          # privateAddress: "65.109.11.32"

          # Host level SSH config override.
          # ssh:
          #   port:
          #   privateKeyFilePath:

